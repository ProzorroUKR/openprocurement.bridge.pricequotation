stages:
#  - test
#  - build
  - push image

test_sanbox_true:
  image: python:2.7
  stage: test
  tags:
    - dind
  variables:
    SANDBOX_MODE: 'True'
    GIT_STRATEGY: clone
  before_script:
    - echo "machine gitlab.quintagroup.com login $TOKEN_NAME password $D_TOKEN" > ~/.netrc
    - pip install -r requirements-dev.txt
    - pip install -e .
  script:
    - pytest openprocurement/bridge/pricequotation/tests/ --cov=openprocurement/bridge/pricequotation


test_sanbox_false:
  image: python:2.7
  stage: test
  variables:
    GIT_STRATEGY: clone
  tags:
    - dind
  before_script:
    - echo "machine gitlab.quintagroup.com login $TOKEN_NAME password $D_TOKEN" > ~/.netrc
    - pip install -r requirements-dev.txt
    - pip install -e .
  script:
    - pytest openprocurement/bridge/pricequotation/tests/ --cov=openprocurement/bridge/pricequotation


build:
  stage: build
  tags:
    - dind
  before_script:
    - apk add gettext
    - envsubst < Dockerfile_template > Dockerfile
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.quintagroup.com:443
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG . 
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG


docker build:
  image: docker:18.09.9-git
  stage: push image
  only:
    - tags
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - LATEST_MASTER_COMMIT=$(git log -n 1 origin/master --pretty=format:"%H")
    - if [ "$LATEST_MASTER_COMMIT" = "$CI_COMMIT_SHA" ]; then EXTRA_TAGS="-t $CI_REGISTRY_IMAGE:latest"; fi
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $EXTRA_TAGS .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - if [ "$LATEST_MASTER_COMMIT" = "$CI_COMMIT_SHA" ]; then docker push $CI_REGISTRY_IMAGE:latest; fi

